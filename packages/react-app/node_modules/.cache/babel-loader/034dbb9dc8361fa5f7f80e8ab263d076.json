{"ast":null,"code":"import { JsonRpcProvider, Web3Provider } from '@ethersproject/providers';\nimport { Signer } from 'ethers';\n/**\n * Parse TEthersProviderOrSigner to TProviderAndSigner\n * @param providerOrSigner TEthersProviderOrSigner\n * @returns TProviderAndSigner\n */\n\nexport const parseProviderOrSigner = async providerOrSigner => {\n  let signer = undefined;\n  let provider;\n  let providerNetwork;\n\n  if (providerOrSigner && (providerOrSigner instanceof JsonRpcProvider || providerOrSigner instanceof Web3Provider)) {\n    const accounts = await providerOrSigner.listAccounts();\n\n    if (accounts && accounts.length > 0) {\n      signer = providerOrSigner.getSigner();\n    }\n\n    provider = providerOrSigner;\n    providerNetwork = await providerOrSigner.getNetwork();\n  }\n\n  if (!signer && providerOrSigner instanceof Signer) {\n    signer = providerOrSigner;\n    provider = signer.provider;\n    providerNetwork = provider && (await provider.getNetwork());\n  }\n\n  return {\n    signer,\n    provider,\n    providerNetwork\n  };\n};","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/node_modules/eth-hooks/functions/providerOrSigner.js"],"names":["JsonRpcProvider","Web3Provider","Signer","parseProviderOrSigner","providerOrSigner","signer","undefined","provider","providerNetwork","accounts","listAccounts","length","getSigner","getNetwork"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,YAA1B,QAA8C,0BAA9C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,gBAAP,IAA4B;AAC7D,MAAIC,MAAM,GAAGC,SAAb;AACA,MAAIC,QAAJ;AACA,MAAIC,eAAJ;;AACA,MAAIJ,gBAAgB,KAAKA,gBAAgB,YAAYJ,eAA5B,IAA+CI,gBAAgB,YAAYH,YAAhF,CAApB,EAAmH;AAC/G,UAAMQ,QAAQ,GAAG,MAAML,gBAAgB,CAACM,YAAjB,EAAvB;;AACA,QAAID,QAAQ,IAAIA,QAAQ,CAACE,MAAT,GAAkB,CAAlC,EAAqC;AACjCN,MAAAA,MAAM,GAAGD,gBAAgB,CAACQ,SAAjB,EAAT;AACH;;AACDL,IAAAA,QAAQ,GAAGH,gBAAX;AACAI,IAAAA,eAAe,GAAG,MAAMJ,gBAAgB,CAACS,UAAjB,EAAxB;AACH;;AACD,MAAI,CAACR,MAAD,IAAWD,gBAAgB,YAAYF,MAA3C,EAAmD;AAC/CG,IAAAA,MAAM,GAAGD,gBAAT;AACAG,IAAAA,QAAQ,GAAGF,MAAM,CAACE,QAAlB;AACAC,IAAAA,eAAe,GAAGD,QAAQ,KAAK,MAAMA,QAAQ,CAACM,UAAT,EAAX,CAA1B;AACH;;AACD,SAAO;AAAER,IAAAA,MAAF;AAAUE,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,GAAP;AACH,CAlBM","sourcesContent":["import { JsonRpcProvider, Web3Provider } from '@ethersproject/providers';\nimport { Signer } from 'ethers';\n/**\n * Parse TEthersProviderOrSigner to TProviderAndSigner\n * @param providerOrSigner TEthersProviderOrSigner\n * @returns TProviderAndSigner\n */\nexport const parseProviderOrSigner = async (providerOrSigner) => {\n    let signer = undefined;\n    let provider;\n    let providerNetwork;\n    if (providerOrSigner && (providerOrSigner instanceof JsonRpcProvider || providerOrSigner instanceof Web3Provider)) {\n        const accounts = await providerOrSigner.listAccounts();\n        if (accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner();\n        }\n        provider = providerOrSigner;\n        providerNetwork = await providerOrSigner.getNetwork();\n    }\n    if (!signer && providerOrSigner instanceof Signer) {\n        signer = providerOrSigner;\n        provider = signer.provider;\n        providerNetwork = provider && (await provider.getNetwork());\n    }\n    return { signer, provider, providerNetwork };\n};\n"]},"metadata":{},"sourceType":"module"}