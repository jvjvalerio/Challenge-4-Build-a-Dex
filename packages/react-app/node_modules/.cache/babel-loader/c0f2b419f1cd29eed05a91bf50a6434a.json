{"ast":null,"code":"import _regeneratorRuntime from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Badge,Button}from\"antd\";import{useBlockNumber,usePoller}from\"eth-hooks\";import React,{useState}from\"react\";// import { WalletOutlined } from '@ant-design/icons';\nimport Address from\"./Address\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Provider(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMore=_useState2[0],setShowMore=_useState2[1];var _useState3=useState(\"processing\"),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),network=_useState6[0],setNetwork=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),signer=_useState8[0],setSigner=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),address=_useState10[0],setAddress=_useState10[1];var blockNumber=useBlockNumber(props.provider);usePoller(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newNetwork,newSigner,newAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(props.provider&&typeof props.provider.getNetwork===\"function\")){_context.next=26;break;}_context.prev=1;_context.next=4;return props.provider.getNetwork();case 4:newNetwork=_context.sent;setNetwork(newNetwork);if(newNetwork.chainId>0){setStatus(\"success\");}else{setStatus(\"warning\");}_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.log(_context.t0);setStatus(\"processing\");case 13:_context.prev=13;_context.next=16;return props.provider.getSigner();case 16:newSigner=_context.sent;setSigner(newSigner);_context.next=20;return newSigner.getAddress();case 20:newAddress=_context.sent;setAddress(newAddress);// eslint-disable-next-line no-empty\n_context.next=26;break;case 24:_context.prev=24;_context.t1=_context[\"catch\"](13);case 26:case\"end\":return _context.stop();}}},_callee,null,[[1,9],[13,24]]);})),1377);if(typeof props.provider===\"undefined\"||typeof props.provider.getNetwork!==\"function\"||!network||!network.chainId){return/*#__PURE__*/_jsxs(Button,{shape:\"round\",size:\"large\",onClick:function onClick(){setShowMore(!showMore);},children:[/*#__PURE__*/_jsx(Badge,{status:status}),\" \",props.name]});}var showExtra=\"\";if(showMore){showExtra=/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsxs(\"span\",{style:{padding:3},children:[\"id:\",network?network.chainId:\"\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{padding:3},children:[\"name:\",network?network.name:\"\"]})]});}var showWallet=\"\";if(typeof signer!==\"undefined\"&&address){showWallet=/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"span\",{style:{padding:3},children:/*#__PURE__*/_jsx(Address,{minimized:true,address:address})})});}return/*#__PURE__*/_jsxs(Button,{shape:\"round\",size:\"large\",onClick:function onClick(){setShowMore(!showMore);},children:[/*#__PURE__*/_jsx(Badge,{status:status}),\" \",props.name,\" \",showWallet,\" #\",blockNumber,\" \",showExtra]});}","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/packages/react-app/src/components/Provider.jsx"],"names":["Badge","Button","useBlockNumber","usePoller","React","useState","Address","Provider","props","showMore","setShowMore","status","setStatus","network","setNetwork","signer","setSigner","address","setAddress","blockNumber","provider","getNetwork","newNetwork","chainId","console","log","getSigner","newSigner","getAddress","newAddress","name","showExtra","padding","showWallet"],"mappings":"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","sourcesContent":["import { Badge, Button } from \"antd\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport React, { useState } from \"react\";\n// import { WalletOutlined } from '@ant-design/icons';\nimport Address from \"./Address\";\n\nexport default function Provider(props) {\n  const [showMore, setShowMore] = useState(false);\n  const [status, setStatus] = useState(\"processing\");\n  const [network, setNetwork] = useState();\n  const [signer, setSigner] = useState();\n  const [address, setAddress] = useState();\n\n  const blockNumber = useBlockNumber(props.provider);\n\n  usePoller(async () => {\n    if (props.provider && typeof props.provider.getNetwork === \"function\") {\n      try {\n        const newNetwork = await props.provider.getNetwork();\n        setNetwork(newNetwork);\n        if (newNetwork.chainId > 0) {\n          setStatus(\"success\");\n        } else {\n          setStatus(\"warning\");\n        }\n      } catch (e) {\n        console.log(e);\n        setStatus(\"processing\");\n      }\n      try {\n        const newSigner = await props.provider.getSigner();\n        setSigner(newSigner);\n        const newAddress = await newSigner.getAddress();\n        setAddress(newAddress);\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n    }\n  }, 1377);\n\n  if (\n    typeof props.provider === \"undefined\" ||\n    typeof props.provider.getNetwork !== \"function\" ||\n    !network ||\n    !network.chainId\n  ) {\n    return (\n      <Button\n        shape=\"round\"\n        size=\"large\"\n        onClick={() => {\n          setShowMore(!showMore);\n        }}\n      >\n        <Badge status={status} /> {props.name}\n      </Button>\n    );\n  }\n\n  let showExtra = \"\";\n  if (showMore) {\n    showExtra = (\n      <span>\n        <span style={{ padding: 3 }}>\n          id:\n          {network ? network.chainId : \"\"}\n        </span>\n        <span style={{ padding: 3 }}>\n          name:\n          {network ? network.name : \"\"}\n        </span>\n      </span>\n    );\n  }\n\n  let showWallet = \"\";\n  if (typeof signer !== \"undefined\" && address) {\n    showWallet = (\n      <span>\n        <span style={{ padding: 3 }}>\n          <Address minimized address={address} />\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <Button\n      shape=\"round\"\n      size=\"large\"\n      onClick={() => {\n        setShowMore(!showMore);\n      }}\n    >\n      <Badge status={status} /> {props.name} {showWallet} #{blockNumber} {showExtra}\n    </Button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}