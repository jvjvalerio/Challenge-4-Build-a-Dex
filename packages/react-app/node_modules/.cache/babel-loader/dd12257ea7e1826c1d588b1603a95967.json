{"ast":null,"code":"import axios from 'axios';\nimport { useState, useEffect } from 'react';\n/**\n * Gets a tokenlist (see more at https://tokenlists.org/), returning the .tokens only\n *\n * ~ How can I use? ~\n  const tokenList = useTokenList(); <- default returns the Unsiwap tokens\n  const tokenList = useTokenList(\"https://gateway.ipfs.io/ipns/tokens.uniswap.org\");\n * @param tokenListUri (string)\n * @param chainId (number)\n * @returns (TokenInfo[])\n */\n\nexport const useTokenList = (tokenListUri = 'https://gateway.ipfs.io/ipns/tokens.uniswap.org', chainId) => {\n  const [tokenList, setTokenList] = useState([]);\n  useEffect(() => {\n    const getTokenList = async () => {\n      try {\n        const tokenListResp = (await axios(tokenListUri)).data;\n\n        if (tokenListResp != null) {\n          let tokenInfo = [];\n\n          if (chainId) {\n            tokenInfo = tokenListResp.tokens.filter(t => {\n              return t.chainId === chainId;\n            });\n          } else {\n            tokenInfo = tokenListResp.tokens;\n          }\n\n          setTokenList(tokenInfo);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    void getTokenList();\n  }, [chainId, tokenListUri]);\n  return tokenList;\n};","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/node_modules/eth-hooks/dapps/dex/useTokenList.js"],"names":["axios","useState","useEffect","useTokenList","tokenListUri","chainId","tokenList","setTokenList","getTokenList","tokenListResp","data","tokenInfo","tokens","filter","t","e","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,YAAY,GAAG,iDAAhB,EAAmEC,OAAnE,KAA+E;AACvG,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,YAAY,GAAG,YAAY;AAC7B,UAAI;AACA,cAAMC,aAAa,GAAG,CAAC,MAAMT,KAAK,CAACI,YAAD,CAAZ,EAA4BM,IAAlD;;AACA,YAAID,aAAa,IAAI,IAArB,EAA2B;AACvB,cAAIE,SAAS,GAAG,EAAhB;;AACA,cAAIN,OAAJ,EAAa;AACTM,YAAAA,SAAS,GAAGF,aAAa,CAACG,MAAd,CAAqBC,MAArB,CAA6BC,CAAD,IAAO;AAC3C,qBAAOA,CAAC,CAACT,OAAF,KAAcA,OAArB;AACH,aAFW,CAAZ;AAGH,WAJD,MAKK;AACDM,YAAAA,SAAS,GAAGF,aAAa,CAACG,MAA1B;AACH;;AACDL,UAAAA,YAAY,CAACI,SAAD,CAAZ;AACH;AACJ,OAdD,CAeA,OAAOI,CAAP,EAAU;AACNC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,KAnBD;;AAoBA,SAAKP,YAAY,EAAjB;AACH,GAtBQ,EAsBN,CAACH,OAAD,EAAUD,YAAV,CAtBM,CAAT;AAuBA,SAAOE,SAAP;AACH,CA1BM","sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\n/**\n * Gets a tokenlist (see more at https://tokenlists.org/), returning the .tokens only\n *\n * ~ How can I use? ~\n  const tokenList = useTokenList(); <- default returns the Unsiwap tokens\n  const tokenList = useTokenList(\"https://gateway.ipfs.io/ipns/tokens.uniswap.org\");\n * @param tokenListUri (string)\n * @param chainId (number)\n * @returns (TokenInfo[])\n */\nexport const useTokenList = (tokenListUri = 'https://gateway.ipfs.io/ipns/tokens.uniswap.org', chainId) => {\n    const [tokenList, setTokenList] = useState([]);\n    useEffect(() => {\n        const getTokenList = async () => {\n            try {\n                const tokenListResp = (await axios(tokenListUri)).data;\n                if (tokenListResp != null) {\n                    let tokenInfo = [];\n                    if (chainId) {\n                        tokenInfo = tokenListResp.tokens.filter((t) => {\n                            return t.chainId === chainId;\n                        });\n                    }\n                    else {\n                        tokenInfo = tokenListResp.tokens;\n                    }\n                    setTokenList(tokenInfo);\n                }\n            }\n            catch (e) {\n                console.log(e);\n            }\n        };\n        void getTokenList();\n    }, [chainId, tokenListUri]);\n    return tokenList;\n};\n"]},"metadata":{},"sourceType":"module"}