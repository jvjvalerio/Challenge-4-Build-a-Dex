{"ast":null,"code":"import _regeneratorRuntime from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Alert,Button}from\"antd\";import React from\"react\";import{NETWORK}from\"../constants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NetworkDisplay(_ref){var NETWORKCHECK=_ref.NETWORKCHECK,localChainId=_ref.localChainId,selectedChainId=_ref.selectedChainId,targetNetwork=_ref.targetNetwork,USE_NETWORK_SELECTOR=_ref.USE_NETWORK_SELECTOR,logoutOfWeb3Modal=_ref.logoutOfWeb3Modal;var networkDisplay=\"\";if(NETWORKCHECK&&localChainId&&selectedChainId&&localChainId!==selectedChainId){var networkSelected=NETWORK(selectedChainId);var networkLocal=NETWORK(localChainId);if(selectedChainId===1337&&localChainId===31337){networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:2,position:\"absolute\",right:0,top:60,padding:16},children:/*#__PURE__*/_jsx(Alert,{message:\"\\u26A0\\uFE0F Wrong Network ID\",description:/*#__PURE__*/_jsxs(\"div\",{children:[\"You have \",/*#__PURE__*/_jsx(\"b\",{children:\"chain id 1337\"}),\" for localhost and you need to change it to \",/*#__PURE__*/_jsx(\"b\",{children:\"31337\"}),\" to work with HardHat.\",/*#__PURE__*/_jsx(\"div\",{children:\"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"})]}),type:\"error\",closable:false})});}else{networkDisplay=/*#__PURE__*/_jsx(\"div\",{style:{zIndex:2,position:\"absolute\",right:0,top:60,padding:16},children:/*#__PURE__*/_jsx(Alert,{message:\"\\u26A0\\uFE0F Wrong Network\",description:/*#__PURE__*/_jsxs(\"div\",{children:[\"You have \",/*#__PURE__*/_jsx(\"b\",{children:networkSelected&&networkSelected.name}),\" selected and you need to be on\",\" \",/*#__PURE__*/_jsx(Button,{onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var ethereum,data,switchTx;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:ethereum=window.ethereum;data=[{chainId:\"0x\"+targetNetwork.chainId.toString(16),chainName:targetNetwork.name,nativeCurrency:targetNetwork.nativeCurrency,rpcUrls:[targetNetwork.rpcUrl],blockExplorerUrls:[targetNetwork.blockExplorer]}];console.log(\"data\",data);_context.prev=3;_context.next=6;return ethereum.request({method:\"wallet_switchEthereumChain\",params:[{chainId:data[0].chainId}]});case 6:switchTx=_context.sent;_context.next=19;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](3);_context.prev=11;_context.next=14;return ethereum.request({method:\"wallet_addEthereumChain\",params:data});case 14:switchTx=_context.sent;_context.next=19;break;case 17:_context.prev=17;_context.t1=_context[\"catch\"](11);case 19:if(switchTx){console.log(switchTx);}case 20:case\"end\":return _context.stop();}}},_callee,null,[[3,9],[11,17]]);})),children:/*#__PURE__*/_jsx(\"b\",{children:networkLocal&&networkLocal.name})})]}),type:\"error\",closable:false})});}}else{networkDisplay=USE_NETWORK_SELECTOR?null:/*#__PURE__*/_jsx(\"div\",{style:{zIndex:-1,position:\"absolute\",right:154,top:28,padding:16,color:targetNetwork.color},children:targetNetwork.name});}console.log({networkDisplay:networkDisplay});return networkDisplay;}export default NetworkDisplay;","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/packages/react-app/src/components/NetworkDisplay.jsx"],"names":["Alert","Button","React","NETWORK","NetworkDisplay","NETWORKCHECK","localChainId","selectedChainId","targetNetwork","USE_NETWORK_SELECTOR","logoutOfWeb3Modal","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","name","ethereum","window","data","chainId","toString","chainName","nativeCurrency","rpcUrls","rpcUrl","blockExplorerUrls","blockExplorer","console","log","request","method","params","switchTx","color"],"mappings":"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","sourcesContent":["import { Alert, Button } from \"antd\";\nimport React from \"react\";\nimport { NETWORK } from \"../constants\";\n\nfunction NetworkDisplay({\n  NETWORKCHECK,\n  localChainId,\n  selectedChainId,\n  targetNetwork,\n  USE_NETWORK_SELECTOR,\n  logoutOfWeb3Modal,\n}) {\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = USE_NETWORK_SELECTOR ? null : (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  console.log({ networkDisplay });\n\n  return networkDisplay;\n}\n\nexport default NetworkDisplay;\n"]},"metadata":{},"sourceType":"module"}