{"ast":null,"code":"import _regeneratorRuntime from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Fortmatic from\"fortmatic\";import WalletLink from\"walletlink\";import Web3Modal from\"web3modal\";import Portis from\"@portis/web3\";import WalletConnectProvider from\"@walletconnect/web3-provider\";import Authereum from\"authereum\";import{INFURA_ID,ALCHEMY_KEY}from\"../constants\";// Coinbase walletLink init\nvar walletLink=new WalletLink({appName:\"coinbase\"});// WalletLink provider\nvar walletLinkProvider=walletLink.makeWeb3Provider(\"https://eth-mainnet.alchemyapi.io/v2/\".concat(ALCHEMY_KEY),1);// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/var web3ModalSetup=function web3ModalSetup(){return new Web3Modal({network:\"mainnet\",// Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\ncacheProvider:true,// optional\ntheme:\"light\",// optional. Change to \"dark\" for a dark theme.\nproviderOptions:{walletconnect:{package:WalletConnectProvider,// required\noptions:{bridge:\"https://polygon.bridge.walletconnect.org\",infuraId:INFURA_ID,rpc:{1:\"https://eth-mainnet.alchemyapi.io/v2/\".concat(ALCHEMY_KEY),// mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n42:\"https://kovan.infura.io/v3/\".concat(INFURA_ID),100:\"https://dai.poa.network\"// xDai\n}}},portis:{display:{logo:\"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",name:\"Portis\",description:\"Connect to Portis App\"},package:Portis,options:{id:\"6255fb2b-58c8-433b-a2c9-62098c05ddc9\"}},fortmatic:{package:Fortmatic,// required\noptions:{key:\"pk_live_5A7C91B2FC585A17\"// required\n}},// torus: {\n//   package: Torus,\n//   options: {\n//     networkParams: {\n//       host: \"https://localhost:8545\", // optional\n//       chainId: 1337, // optional\n//       networkId: 1337 // optional\n//     },\n//     config: {\n//       buildEnv: \"development\" // optional\n//     },\n//   },\n// },\n\"custom-walletlink\":{display:{logo:\"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",name:\"Coinbase\",description:\"Connect to Coinbase Wallet (not Coinbase App)\"},package:walletLinkProvider,connector:function(){var _connector=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider,_options){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return provider.enable();case 2:return _context.abrupt(\"return\",provider);case 3:case\"end\":return _context.stop();}}},_callee);}));function connector(_x,_x2){return _connector.apply(this,arguments);}return connector;}()},authereum:{package:Authereum// required\n}}});};export default web3ModalSetup;","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/packages/react-app/src/helpers/Web3ModalSetup.js"],"names":["Fortmatic","WalletLink","Web3Modal","Portis","WalletConnectProvider","Authereum","INFURA_ID","ALCHEMY_KEY","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3ModalSetup","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","portis","display","logo","name","description","id","fortmatic","key","connector","provider","_options","enable","authereum"],"mappings":"iUAAA,MAAOA,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,8BAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,OAASC,SAAT,CAAoBC,WAApB,KAAuC,cAAvC,CAEA;AACA,GAAMC,CAAAA,UAAU,CAAG,GAAIP,CAAAA,UAAJ,CAAe,CAChCQ,OAAO,CAAE,UADuB,CAAf,CAAnB,CAIA;AACA,GAAMC,CAAAA,kBAAkB,CAAGF,UAAU,CAACG,gBAAX,gDAAoEJ,WAApE,EAAmF,CAAnF,CAA3B,CAEA;AACA;AACA;AACA,EACA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SACrB,IAAIV,CAAAA,SAAJ,CAAc,CACZW,OAAO,CAAE,SADG,CACQ;AACpBC,aAAa,CAAE,IAFH,CAES;AACrBC,KAAK,CAAE,OAHK,CAGI;AAChBC,eAAe,CAAE,CACfC,aAAa,CAAE,CACbC,OAAO,CAAEd,qBADI,CACmB;AAChCe,OAAO,CAAE,CACPC,MAAM,CAAE,0CADD,CAEPC,QAAQ,CAAEf,SAFH,CAGPgB,GAAG,CAAE,CACH,iDAA2Cf,WAA3C,CADG,CACuD;AAC1D,wCAAkCD,SAAlC,CAFG,CAGH,IAAK,yBAA2B;AAH7B,CAHE,CAFI,CADA,CAafiB,MAAM,CAAE,CACNC,OAAO,CAAE,CACPC,IAAI,CAAE,sGADC,CAEPC,IAAI,CAAE,QAFC,CAGPC,WAAW,CAAE,uBAHN,CADH,CAMNT,OAAO,CAAEf,MANH,CAONgB,OAAO,CAAE,CACPS,EAAE,CAAE,sCADG,CAPH,CAbO,CAwBfC,SAAS,CAAE,CACTX,OAAO,CAAElB,SADA,CACW;AACpBmB,OAAO,CAAE,CACPW,GAAG,CAAE,0BAA4B;AAD1B,CAFA,CAxBI,CA8Bf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAqB,CACnBN,OAAO,CAAE,CACPC,IAAI,CAAE,2GADC,CAEPC,IAAI,CAAE,UAFC,CAGPC,WAAW,CAAE,+CAHN,CADU,CAMnBT,OAAO,CAAER,kBANU,CAOnBqB,SAAS,mFAAE,iBAAOC,QAAP,CAAiBC,QAAjB,wIACHD,CAAAA,QAAQ,CAACE,MAAT,EADG,wCAEFF,QAFE,wDAAF,2FAPU,CA3CN,CAuDfG,SAAS,CAAE,CACTjB,OAAO,CAAEb,SAAW;AADX,CAvDI,CAJL,CAAd,CADqB,EAAvB,CAkEA,cAAeO,CAAAA,cAAf","sourcesContent":["import Fortmatic from \"fortmatic\";\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\nimport { INFURA_ID, ALCHEMY_KEY } from \"../constants\";\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3ModalSetup = () =>\n  new Web3Modal({\n    network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n    cacheProvider: true, // optional\n    theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider, // required\n        options: {\n          bridge: \"https://polygon.bridge.walletconnect.org\",\n          infuraId: INFURA_ID,\n          rpc: {\n            1: `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n            42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n            100: \"https://dai.poa.network\", // xDai\n          },\n        },\n      },\n      portis: {\n        display: {\n          logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n          name: \"Portis\",\n          description: \"Connect to Portis App\",\n        },\n        package: Portis,\n        options: {\n          id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n        },\n      },\n      fortmatic: {\n        package: Fortmatic, // required\n        options: {\n          key: \"pk_live_5A7C91B2FC585A17\", // required\n        },\n      },\n      // torus: {\n      //   package: Torus,\n      //   options: {\n      //     networkParams: {\n      //       host: \"https://localhost:8545\", // optional\n      //       chainId: 1337, // optional\n      //       networkId: 1337 // optional\n      //     },\n      //     config: {\n      //       buildEnv: \"development\" // optional\n      //     },\n      //   },\n      // },\n      \"custom-walletlink\": {\n        display: {\n          logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n          name: \"Coinbase\",\n          description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n        },\n        package: walletLinkProvider,\n        connector: async (provider, _options) => {\n          await provider.enable();\n          return provider;\n        },\n      },\n      authereum: {\n        package: Authereum, // required\n      },\n    },\n  });\n\nexport default web3ModalSetup;\n"]},"metadata":{},"sourceType":"module"}