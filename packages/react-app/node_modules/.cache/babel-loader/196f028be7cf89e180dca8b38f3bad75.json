{"ast":null,"code":"const {\n  JsonRpcError,\n  EthJsonRpcError\n} = require('./src/classes');\n\nconst {\n  serializeError,\n  getMessageFromCode\n} = require('./src/utils');\n\nconst errors = require('./src/errors');\n\nconst ERROR_CODES = require('./src/errorCodes.json');\n\nmodule.exports = {\n  errors,\n  JsonRpcError,\n  EthJsonRpcError,\n  serializeError,\n  getMessageFromCode,\n\n  /** @type ErrorCodes */\n  ERROR_CODES\n}; // Types\n\n/**\n * @typedef {Object} EthJsonRpcErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} JsonRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n */\n\n/**\n * @typedef ErrorCodes\n * @property {JsonRpcErrorCodes} jsonRpc\n * @property {EthJsonRpcErrorCodes} eth\n */","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/node_modules/eth-json-rpc-errors/index.js"],"names":["JsonRpcError","EthJsonRpcError","require","serializeError","getMessageFromCode","errors","ERROR_CODES","module","exports"],"mappings":"AACA,MAAM;AAAEA,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,IAAoCC,OAAO,CAAC,eAAD,CAAjD;;AACA,MAAM;AACJC,EAAAA,cADI;AACYC,EAAAA;AADZ,IAEFF,OAAO,CAAC,aAAD,CAFX;;AAGA,MAAMG,MAAM,GAAGH,OAAO,CAAC,cAAD,CAAtB;;AACA,MAAMI,WAAW,GAAGJ,OAAO,CAAC,uBAAD,CAA3B;;AAEAK,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,MADe;AAEfL,EAAAA,YAFe;AAGfC,EAAAA,eAHe;AAIfE,EAAAA,cAJe;AAKfC,EAAAA,kBALe;;AAMf;AACAE,EAAAA;AAPe,CAAjB,C,CAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["\nconst { JsonRpcError, EthJsonRpcError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst errors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  errors,\n  JsonRpcError,\n  EthJsonRpcError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthJsonRpcErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} JsonRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n */\n\n/**\n * @typedef ErrorCodes\n * @property {JsonRpcErrorCodes} jsonRpc\n * @property {EthJsonRpcErrorCodes} eth\n */\n"]},"metadata":{},"sourceType":"script"}