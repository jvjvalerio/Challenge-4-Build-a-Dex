{"ast":null,"code":"import _regeneratorRuntime from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{KeyOutlined,QrcodeOutlined,SendOutlined,WalletOutlined}from\"@ant-design/icons\";import{Button,Modal,Spin,Tooltip,Typography}from\"antd\";import{ethers}from\"ethers\";import QR from\"qrcode.react\";import React,{useState,useEffect}from\"react\";import{Transactor}from\"../helpers\";import Address from\"./Address\";import AddressInput from\"./AddressInput\";import Balance from\"./Balance\";import EtherInput from\"./EtherInput\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Text=Typography.Text,Paragraph=Typography.Paragraph;/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/export default function Wallet(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),signerAddress=_useState2[0],setSignerAddress=_useState2[1];useEffect(function(){function getAddress(){return _getAddress.apply(this,arguments);}function _getAddress(){_getAddress=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!props.signer){_context.next=5;break;}_context.next=3;return props.signer.getAddress();case 3:newAddress=_context.sent;setSignerAddress(newAddress);case 5:case\"end\":return _context.stop();}}},_callee);}));return _getAddress.apply(this,arguments);}getAddress();},[props.signer]);var selectedAddress=props.address||signerAddress;var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),qr=_useState6[0],setQr=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),amount=_useState8[0],setAmount=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),toAddress=_useState10[0],setToAddress=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),pk=_useState12[0],setPK=_useState12[1];var providerSend=props.provider?/*#__PURE__*/_jsx(Tooltip,{title:\"Wallet\",children:/*#__PURE__*/_jsx(WalletOutlined,{onClick:function onClick(){setOpen(!open);},rotate:-90,style:{padding:7,color:props.color?props.color:\"\",cursor:\"pointer\",fontSize:28,verticalAlign:\"middle\"}})}):\"\";var display;var receiveButton;var privateKeyButton;if(qr){display=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Text,{copyable:true,children:selectedAddress})}),/*#__PURE__*/_jsx(QR,{value:selectedAddress,size:\"450\",level:\"H\",includeMargin:true,renderAs:\"svg\",imageSettings:{excavate:false}})]});receiveButton=/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){setQr(\"\");},children:[/*#__PURE__*/_jsx(QrcodeOutlined,{}),\" Hide\"]},\"hide\");privateKeyButton=/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){setPK(selectedAddress);setQr(\"\");},children:[/*#__PURE__*/_jsx(KeyOutlined,{}),\" Private Key\"]},\"hide\");}else if(pk){var _pk=localStorage.getItem(\"metaPrivateKey\");var wallet=new ethers.Wallet(_pk);if(wallet.address!==selectedAddress){display=/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"*injected account*, private key unknown\"})});}else{var extraPkDisplayAdded={};var extraPkDisplay=[];extraPkDisplayAdded[wallet.address]=true;extraPkDisplay.push(/*#__PURE__*/_jsx(\"div\",{style:{fontSize:16,padding:2,backgroundStyle:\"#89e789\"},children:/*#__PURE__*/_jsxs(\"a\",{href:\"/pk#\"+_pk,children:[/*#__PURE__*/_jsx(Address,{minimized:true,address:wallet.address,ensProvider:props.ensProvider}),\" \",wallet.address.substr(0,6)]})}));for(var key in localStorage){if(key.indexOf(\"metaPrivateKey_backup\")>=0){console.log(key);var pastpk=localStorage.getItem(key);var pastwallet=new ethers.Wallet(pastpk);if(!extraPkDisplayAdded[pastwallet.address]/* && selectedAddress!=pastwallet.address */){extraPkDisplayAdded[pastwallet.address]=true;extraPkDisplay.push(/*#__PURE__*/_jsx(\"div\",{style:{fontSize:16},children:/*#__PURE__*/_jsxs(\"a\",{href:\"/pk#\"+pastpk,children:[/*#__PURE__*/_jsx(Address,{minimized:true,address:pastwallet.address,ensProvider:props.ensProvider}),\" \",pastwallet.address.substr(0,6)]})}));}}}display=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Private Key:\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Text,{copyable:true,children:_pk})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"i\",{children:[\"Point your camera phone at qr code to open in\",/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",href:\"https://xdai.io/\"+_pk,rel:\"noopener noreferrer\",children:\"burner wallet\"}),\":\"]}),/*#__PURE__*/_jsx(QR,{value:\"https://xdai.io/\"+_pk,size:\"450\",level:\"H\",includeMargin:true,renderAs:\"svg\",imageSettings:{excavate:false}}),/*#__PURE__*/_jsx(Paragraph,{style:{fontSize:\"16\"},copyable:true,children:\"https://xdai.io/\"+_pk}),extraPkDisplay?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Known Private Keys:\"}),extraPkDisplay,/*#__PURE__*/_jsx(Button,{onClick:function onClick(){var currentPrivateKey=window.localStorage.getItem(\"metaPrivateKey\");if(currentPrivateKey){window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);}var randomWallet=ethers.Wallet.createRandom();var privateKey=randomWallet._signingKey().privateKey;window.localStorage.setItem(\"metaPrivateKey\",privateKey);window.location.reload();},children:\"Generate\"})]}):\"\"]});}receiveButton=/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){setQr(selectedAddress);setPK(\"\");},children:[/*#__PURE__*/_jsx(QrcodeOutlined,{}),\" Receive\"]},\"receive\");privateKeyButton=/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){setPK(\"\");setQr(\"\");},children:[/*#__PURE__*/_jsx(KeyOutlined,{}),\" Hide\"]},\"hide\");}else{var inputStyle={padding:10};display=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:inputStyle,children:/*#__PURE__*/_jsx(AddressInput,{autoFocus:true,ensProvider:props.ensProvider,placeholder:\"to address\",address:toAddress,onChange:setToAddress})}),/*#__PURE__*/_jsx(\"div\",{style:inputStyle,children:/*#__PURE__*/_jsx(EtherInput,{price:props.price,value:amount,onChange:function onChange(value){setAmount(value);}})})]});receiveButton=/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){setQr(selectedAddress);setPK(\"\");},children:[/*#__PURE__*/_jsx(QrcodeOutlined,{}),\" Receive\"]},\"receive\");privateKeyButton=/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){setPK(selectedAddress);setQr(\"\");},children:[/*#__PURE__*/_jsx(KeyOutlined,{}),\" Private Key\"]},\"hide\");}return/*#__PURE__*/_jsxs(\"span\",{children:[providerSend,/*#__PURE__*/_jsx(Modal,{visible:open,title:/*#__PURE__*/_jsxs(\"div\",{children:[selectedAddress?/*#__PURE__*/_jsx(Address,{address:selectedAddress,ensProvider:props.ensProvider}):/*#__PURE__*/_jsx(Spin,{}),/*#__PURE__*/_jsx(\"div\",{style:{float:\"right\",paddingRight:25},children:/*#__PURE__*/_jsx(Balance,{address:selectedAddress,provider:props.provider,dollarMultiplier:props.price})})]}),onOk:function onOk(){setQr();setPK();setOpen(!open);},onCancel:function onCancel(){setQr();setPK();setOpen(!open);},footer:[privateKeyButton,receiveButton,/*#__PURE__*/_jsxs(Button,{type:\"primary\",disabled:!amount||!toAddress||qr,loading:false,onClick:function onClick(){var tx=Transactor(props.signer||props.provider);var value;try{value=ethers.utils.parseEther(\"\"+amount);}catch(e){// failed to parseEther, try something else\nvalue=ethers.utils.parseEther(\"\"+parseFloat(amount).toFixed(8));}tx({to:toAddress,value:value});setOpen(!open);setQr();},children:[/*#__PURE__*/_jsx(SendOutlined,{}),\" Send\"]},\"submit\")],children:display})]});}","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/packages/react-app/src/components/Wallet.jsx"],"names":["KeyOutlined","QrcodeOutlined","SendOutlined","WalletOutlined","Button","Modal","Spin","Tooltip","Typography","ethers","QR","React","useState","useEffect","Transactor","Address","AddressInput","Balance","EtherInput","Text","Paragraph","Wallet","props","signerAddress","setSignerAddress","getAddress","signer","newAddress","selectedAddress","address","open","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","provider","padding","color","cursor","fontSize","verticalAlign","display","receiveButton","privateKeyButton","excavate","localStorage","getItem","wallet","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","ensProvider","substr","key","indexOf","console","log","pastpk","pastwallet","currentPrivateKey","window","setItem","Date","now","randomWallet","createRandom","privateKey","_signingKey","location","reload","inputStyle","price","value","float","paddingRight","tx","utils","parseEther","e","parseFloat","toFixed","to"],"mappings":"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","sourcesContent":["import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\n\nconst { Text, Paragraph } = Typography;\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [props.signer]);\n\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div>\n            <Text copyable>{pk}</Text>\n          </div>\n\n          <hr />\n\n          <i>\n            Point your camera phone at qr code to open in\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\n              burner wallet\n            </a>\n            :\n          </i>\n          <QR\n            value={\"https://xdai.io/\" + pk}\n            size=\"450\"\n            level=\"H\"\n            includeMargin\n            renderAs=\"svg\"\n            imageSettings={{ excavate: false }}\n          />\n\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\n            {\"https://xdai.io/\" + pk}\n          </Paragraph>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.signer || props.provider);\n\n              let value;\n              try {\n                value = ethers.utils.parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}