{"ast":null,"code":"var _jsxFileName = \"/Users/untitled/challenge-4-single-pool-dex/packages/react-app/src/components/Events.jsx\",\n    _s = $RefreshSig$();\n\nimport { List } from \"antd\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport { Address, TokenBalance } from \"../components\";\n/*\n  ~ What it does? ~\n\n  Displays a lists of events\n\n  ~ How can I use? ~\n\n  <Events\n    contracts={readContracts}\n    contractName=\"YourContract\"\n    eventName=\"SetPurpose\"\n    localProvider={localProvider}\n    mainnetProvider={mainnetProvider}\n    startBlock={1}\n  />\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Events({\n  contracts,\n  contractName,\n  eventName,\n  localProvider,\n  mainnetProvider,\n  startBlock\n}) {\n  _s();\n\n  // ðŸ“Ÿ Listen for broadcast events\n  const events = useEventListener(contracts, contractName, eventName, localProvider, startBlock);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 600,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [eventName, \" Events\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), eventName === \"EthToTokenSwap\" ? \" âŸ  -->ðŸŽˆ Address | Trade | AmountIn | AmountOut\" : eventName === \"TokenToEthSwap\" ? \"ðŸŽˆ-->âŸ  Address | Trade | AmountOut | AmountIn\" : eventName === \"LiquidityProvided\" ? \"âž• Address | Liquidity Minted | Eth In | Balloons In\" : \"âž– Address | Liquidity Withdrawn | ETH out | Balloons Out \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      bordered: true,\n      dataSource: events,\n      renderItem: item => {\n        return /*#__PURE__*/_jsxDEV(List.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Address, {\n            address: item.args[0],\n            ensProvider: mainnetProvider,\n            fontSize: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), item.args[1].toString().indexOf(\"E\") == -1 ? /*#__PURE__*/_jsxDEV(TokenBalance, {\n            balance: item.args[1],\n            provider: localProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this) : `${item.args[1].toString()}`, /*#__PURE__*/_jsxDEV(TokenBalance, {\n            balance: item.args[2],\n            provider: localProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TokenBalance, {\n            balance: item.args[3],\n            provider: localProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, item.blockNumber + \"_\" + item.args[0].toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Events, \"vzXMvB5+DzetsqPXOYcmT/6Q2JY=\", false, function () {\n  return [useEventListener];\n});\n\n_c = Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/packages/react-app/src/components/Events.jsx"],"names":["List","useEventListener","Address","TokenBalance","Events","contracts","contractName","eventName","localProvider","mainnetProvider","startBlock","events","width","margin","marginTop","paddingBottom","item","args","toString","indexOf","blockNumber"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,eAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA,SAA3B;AAAsCC,EAAAA,aAAtC;AAAqDC,EAAAA,eAArD;AAAsEC,EAAAA;AAAtE,CAAhB,EAAoG;AAAA;;AACjH;AACA,QAAMC,MAAM,GAAGV,gBAAgB,CAACI,SAAD,EAAYC,YAAZ,EAA0BC,SAA1B,EAAqCC,aAArC,EAAoDE,UAApD,CAA/B;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE,MAAtB;AAA8BC,MAAAA,SAAS,EAAE,EAAzC;AAA6CC,MAAAA,aAAa,EAAE;AAA5D,KAAZ;AAAA,4BACE;AAAA,iBACGR,SADH,0BAEE;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGA,SAAS,KAAK,gBAAd,GACG,iDADH,GAEGA,SAAS,KAAK,gBAAd,GACA,+CADA,GAEAA,SAAS,KAAK,mBAAd,GACA,qDADA,GAEA,2DATN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,IAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,UAAU,EAAEI,MAFd;AAGE,MAAA,UAAU,EAAEK,IAAI,IAAI;AAClB,4BACE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEA,IAAI,CAACC,IAAL,CAAU,CAAV,CAAlB;AAAgC,YAAA,WAAW,EAAER,eAA7C;AAA8D,YAAA,QAAQ,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGO,IAAI,CAACC,IAAL,CAAU,CAAV,EAAaC,QAAb,GAAwBC,OAAxB,CAAgC,GAAhC,KAAwC,CAAC,CAAzC,gBACC,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEH,IAAI,CAACC,IAAL,CAAU,CAAV,CAAvB;AAAqC,YAAA,QAAQ,EAAET;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADD,GAGE,GAAEQ,IAAI,CAACC,IAAL,CAAU,CAAV,EAAaC,QAAb,EAAwB,EAL/B,eAOE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEF,IAAI,CAACC,IAAL,CAAU,CAAV,CAAvB;AAAqC,YAAA,QAAQ,EAAET;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEQ,IAAI,CAACC,IAAL,CAAU,CAAV,CAAvB;AAAqC,YAAA,QAAQ,EAAET;AAA/C;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA,WAAgBQ,IAAI,CAACI,WAAL,GAAmB,GAAnB,GAAyBJ,IAAI,CAACC,IAAL,CAAU,CAAV,EAAaC,QAAb,EAAzC;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD;AAhBH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GArCuBd,M;UAEPH,gB;;;KAFOG,M","sourcesContent":["import { List } from \"antd\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport { Address, TokenBalance } from \"../components\";\n\n/*\n  ~ What it does? ~\n\n  Displays a lists of events\n\n  ~ How can I use? ~\n\n  <Events\n    contracts={readContracts}\n    contractName=\"YourContract\"\n    eventName=\"SetPurpose\"\n    localProvider={localProvider}\n    mainnetProvider={mainnetProvider}\n    startBlock={1}\n  />\n*/\n\nexport default function Events({ contracts, contractName, eventName, localProvider, mainnetProvider, startBlock }) {\n  // ðŸ“Ÿ Listen for broadcast events\n  const events = useEventListener(contracts, contractName, eventName, localProvider, startBlock);\n\n  return (\n    <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n      <h2>\n        {eventName} Events\n        <br />\n        {eventName === \"EthToTokenSwap\"\n          ? \" âŸ  -->ðŸŽˆ Address | Trade | AmountIn | AmountOut\"\n          : eventName === \"TokenToEthSwap\"\n          ? \"ðŸŽˆ-->âŸ  Address | Trade | AmountOut | AmountIn\"\n          : eventName === \"LiquidityProvided\"\n          ? \"âž• Address | Liquidity Minted | Eth In | Balloons In\"\n          : \"âž– Address | Liquidity Withdrawn | ETH out | Balloons Out \"}\n      </h2>\n      <List\n        bordered\n        dataSource={events}\n        renderItem={item => {\n          return (\n            <List.Item key={item.blockNumber + \"_\" + item.args[0].toString()}>\n              <Address address={item.args[0]} ensProvider={mainnetProvider} fontSize={16} />\n              {item.args[1].toString().indexOf(\"E\") == -1 ? (\n                <TokenBalance balance={item.args[1]} provider={localProvider} />\n              ) : (\n                `${item.args[1].toString()}`\n              )}\n              <TokenBalance balance={item.args[2]} provider={localProvider} />\n              <TokenBalance balance={item.args[3]} provider={localProvider} />\n            </List.Item>\n          );\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}