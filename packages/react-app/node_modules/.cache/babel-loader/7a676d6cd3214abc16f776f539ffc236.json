{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst createProvider = async url => {\n  const p = new ethers.providers.StaticJsonRpcProvider(url);\n  await p.ready;\n  return p;\n};\n\nexport default function useStaticJsonRPC(urlArray) {\n  _s();\n\n  const [provider, setProvider] = useState(null);\n  const handleProviders = useCallback(async () => {\n    try {\n      const p = await Promise.race(urlArray.map(createProvider));\n\n      const _p = await p;\n\n      setProvider(_p);\n    } catch (error) {\n      // todo: show notification error about provider issues\n      console.log(error);\n    }\n  }, [urlArray]);\n  useEffect(() => {\n    handleProviders(); // eslint-disable-next-line\n  }, [JSON.stringify(urlArray)]);\n  return provider;\n}\n\n_s(useStaticJsonRPC, \"/2xxz5UzLV/r/IXRlLyJQA12Q34=\");","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/packages/react-app/src/hooks/useStaticJsonRPC.js"],"names":["useCallback","useEffect","useState","ethers","createProvider","url","p","providers","StaticJsonRpcProvider","ready","useStaticJsonRPC","urlArray","provider","setProvider","handleProviders","Promise","race","map","_p","error","console","log","JSON","stringify"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,cAAc,GAAG,MAAMC,GAAN,IAAa;AAClC,QAAMC,CAAC,GAAG,IAAIH,MAAM,CAACI,SAAP,CAAiBC,qBAArB,CAA2CH,GAA3C,CAAV;AAEA,QAAMC,CAAC,CAACG,KAAR;AAEA,SAAOH,CAAP;AACD,CAND;;AAQA,eAAe,SAASI,gBAAT,CAA0BC,QAA1B,EAAoC;AAAA;;AACjD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAMY,eAAe,GAAGd,WAAW,CAAC,YAAY;AAC9C,QAAI;AACF,YAAMM,CAAC,GAAG,MAAMS,OAAO,CAACC,IAAR,CAAaL,QAAQ,CAACM,GAAT,CAAab,cAAb,CAAb,CAAhB;;AACA,YAAMc,EAAE,GAAG,MAAMZ,CAAjB;;AAEAO,MAAAA,WAAW,CAACK,EAAD,CAAX;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAVkC,EAUhC,CAACR,QAAD,CAVgC,CAAnC;AAYAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,eAAe,GADD,CAEd;AACD,GAHQ,EAGN,CAACQ,IAAI,CAACC,SAAL,CAAeZ,QAAf,CAAD,CAHM,CAAT;AAKA,SAAOC,QAAP;AACD;;GArBuBF,gB","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst createProvider = async url => {\n  const p = new ethers.providers.StaticJsonRpcProvider(url);\n\n  await p.ready;\n\n  return p;\n};\n\nexport default function useStaticJsonRPC(urlArray) {\n  const [provider, setProvider] = useState(null);\n\n  const handleProviders = useCallback(async () => {\n    try {\n      const p = await Promise.race(urlArray.map(createProvider));\n      const _p = await p;\n\n      setProvider(_p);\n    } catch (error) {\n      // todo: show notification error about provider issues\n      console.log(error);\n    }\n  }, [urlArray]);\n\n  useEffect(() => {\n    handleProviders();\n    // eslint-disable-next-line\n  }, [JSON.stringify(urlArray)]);\n\n  return provider;\n}\n"]},"metadata":{},"sourceType":"module"}