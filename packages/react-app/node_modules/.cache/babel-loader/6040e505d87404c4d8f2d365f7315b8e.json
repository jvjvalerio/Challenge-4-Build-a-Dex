{"ast":null,"code":"import _regeneratorRuntime from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/untitled/challenge-4-single-pool-dex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{SyncOutlined}from\"@ant-design/icons\";import{utils}from\"ethers\";import{Button,Card,DatePicker,Divider,Input,Progress,Slider,Spin,Switch}from\"antd\";import React,{useState}from\"react\";import{Address,Balance,Events}from\"../components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ExampleUI(_ref){var purpose=_ref.purpose,address=_ref.address,mainnetProvider=_ref.mainnetProvider,localProvider=_ref.localProvider,yourLocalBalance=_ref.yourLocalBalance,price=_ref.price,tx=_ref.tx,readContracts=_ref.readContracts,writeContracts=_ref.writeContracts;var _useState=useState(\"loading...\"),_useState2=_slicedToArray(_useState,2),newPurpose=_useState2[0],setNewPurpose=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #cccccc\",padding:16,width:400,margin:\"auto\",marginTop:64},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Example UI:\"}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"purpose: \",purpose]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:8},children:[/*#__PURE__*/_jsx(Input,{onChange:function onChange(e){setNewPurpose(e.target.value);}}),/*#__PURE__*/_jsx(Button,{style:{marginTop:8},onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:/* look how you call setPurpose on your contract: */ /* notice how you pass a call back for tx updates too */result=tx(writeContracts.YourContract.setPurpose(newPurpose),function(update){console.log(\"üì° Transaction Update:\",update);if(update&&(update.status===\"confirmed\"||update.status===1)){console.log(\" üçæ Transaction \"+update.hash+\" finished!\");console.log(\" ‚õΩÔ∏è \"+update.gasUsed+\"/\"+(update.gasLimit||update.gas)+\" @ \"+parseFloat(update.gasPrice)/1000000000+\" gwei\");}});console.log(\"awaiting metamask/web3 confirm result...\",result);_context.t0=console;_context.next=5;return result;case 5:_context.t1=_context.sent;_context.t0.log.call(_context.t0,_context.t1);case 7:case\"end\":return _context.stop();}}},_callee);})),children:\"Set Purpose!\"})]}),/*#__PURE__*/_jsx(Divider,{}),\"Your Address:\",/*#__PURE__*/_jsx(Address,{address:address,ensProvider:mainnetProvider,fontSize:16}),/*#__PURE__*/_jsx(Divider,{}),\"ENS Address Example:\",/*#__PURE__*/_jsx(Address,{address:\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"/* this will show as austingriffith.eth */,ensProvider:mainnetProvider,fontSize:16}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Your Balance: \",yourLocalBalance?utils.formatEther(yourLocalBalance):\"...\"]}),/*#__PURE__*/_jsx(\"div\",{children:\"OR\"}),/*#__PURE__*/_jsx(Balance,{address:address,provider:localProvider,price:price}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{children:\"\\uD83D\\uDC33 Example Whale Balance:\"}),/*#__PURE__*/_jsx(Balance,{balance:utils.parseEther(\"1000\"),provider:localProvider,price:price}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Your Balance: \",yourLocalBalance?utils.formatEther(yourLocalBalance):\"...\"]}),/*#__PURE__*/_jsx(Divider,{}),\"Your Contract Address:\",/*#__PURE__*/_jsx(Address,{address:readContracts&&readContracts.YourContract?readContracts.YourContract.address:null,ensProvider:mainnetProvider,fontSize:16}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{style:{margin:8},children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){/* look how you call setPurpose on your contract: */tx(writeContracts.YourContract.setPurpose(\"üçª Cheers\"));},children:\"Set Purpose to \\\"\\uD83C\\uDF7B Cheers\\\"\"})}),/*#__PURE__*/_jsx(\"div\",{style:{margin:8},children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){/*\n              you can also just craft a transaction and send it to the tx() transactor\n              here we are sending value straight to the contract's address:\n            */tx({to:writeContracts.YourContract.address,value:utils.parseEther(\"0.001\")});/* this should throw an error about \"no fallback nor receive function\" until you add it */},children:\"Send Value\"})}),/*#__PURE__*/_jsx(\"div\",{style:{margin:8},children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){/* look how we call setPurpose AND send some value along */tx(writeContracts.YourContract.setPurpose(\"üíµ Paying for this one!\",{value:utils.parseEther(\"0.001\")}));/* this will fail until you make the setPurpose function payable */},children:\"Set Purpose With Value\"})}),/*#__PURE__*/_jsx(\"div\",{style:{margin:8},children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){/* you can also just craft a transaction and send it to the tx() transactor */tx({to:writeContracts.YourContract.address,value:utils.parseEther(\"0.001\"),data:writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\",[\"ü§ì Whoa so 1337!\"])});/* this should throw an error about \"no fallback nor receive function\" until you add it */},children:\"Another Example\"})})]}),/*#__PURE__*/_jsx(Events,{contracts:readContracts,contractName:\"YourContract\",eventName:\"SetPurpose\",localProvider:localProvider,mainnetProvider:mainnetProvider,startBlock:1}),/*#__PURE__*/_jsxs(\"div\",{style:{width:600,margin:\"auto\",marginTop:32,paddingBottom:256},children:[/*#__PURE__*/_jsxs(Card,{children:[\"Check out all the\",\" \",/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/austintgriffith/scaffold-eth/tree/master/packages/react-app/src/components\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDCE6 components\"})]}),/*#__PURE__*/_jsxs(Card,{style:{marginTop:32},children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"There are tons of generic components included from\",\" \",/*#__PURE__*/_jsx(\"a\",{href:\"https://ant.design/components/overview/\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\uD83D\\uDC1C ant.design\"}),\" \",\"too!\"]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:8},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",children:\"Buttons\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:8},children:[/*#__PURE__*/_jsx(SyncOutlined,{spin:true}),\" Icons\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:8},children:[\"Date Pickers?\",/*#__PURE__*/_jsx(\"div\",{style:{marginTop:2},children:/*#__PURE__*/_jsx(DatePicker,{onChange:function onChange(){}})})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:32},children:/*#__PURE__*/_jsx(Slider,{range:true,defaultValue:[20,50],onChange:function onChange(){}})}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:32},children:/*#__PURE__*/_jsx(Switch,{defaultChecked:true,onChange:function onChange(){}})}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:32},children:/*#__PURE__*/_jsx(Progress,{percent:50,status:\"active\"})}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:32},children:/*#__PURE__*/_jsx(Spin,{})})]})]})]});}","map":{"version":3,"sources":["/Users/untitled/challenge-4-single-pool-dex/packages/react-app/src/views/ExampleUI.jsx"],"names":["SyncOutlined","utils","Button","Card","DatePicker","Divider","Input","Progress","Slider","Spin","Switch","React","useState","Address","Balance","Events","ExampleUI","purpose","address","mainnetProvider","localProvider","yourLocalBalance","price","tx","readContracts","writeContracts","newPurpose","setNewPurpose","border","padding","width","margin","marginTop","e","target","value","result","YourContract","setPurpose","update","console","log","status","hash","gasUsed","gasLimit","gas","parseFloat","gasPrice","formatEther","parseEther","to","data","interface","encodeFunctionData","paddingBottom"],"mappings":"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","sourcesContent":["import { SyncOutlined } from \"@ant-design/icons\";\nimport { utils } from \"ethers\";\nimport { Button, Card, DatePicker, Divider, Input, Progress, Slider, Spin, Switch } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Address, Balance, Events } from \"../components\";\n\nexport default function ExampleUI({\n  purpose,\n  address,\n  mainnetProvider,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  readContracts,\n  writeContracts,\n}) {\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  return (\n    <div>\n      {/*\n        ‚öôÔ∏è Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 400, margin: \"auto\", marginTop: 64 }}>\n        <h2>Example UI:</h2>\n        <h4>purpose: {purpose}</h4>\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Input\n            onChange={e => {\n              setNewPurpose(e.target.value);\n            }}\n          />\n          <Button\n            style={{ marginTop: 8 }}\n            onClick={async () => {\n              /* look how you call setPurpose on your contract: */\n              /* notice how you pass a call back for tx updates too */\n              const result = tx(writeContracts.YourContract.setPurpose(newPurpose), update => {\n                console.log(\"üì° Transaction Update:\", update);\n                if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                  console.log(\" üçæ Transaction \" + update.hash + \" finished!\");\n                  console.log(\n                    \" ‚õΩÔ∏è \" +\n                      update.gasUsed +\n                      \"/\" +\n                      (update.gasLimit || update.gas) +\n                      \" @ \" +\n                      parseFloat(update.gasPrice) / 1000000000 +\n                      \" gwei\",\n                  );\n                }\n              });\n              console.log(\"awaiting metamask/web3 confirm result...\", result);\n              console.log(await result);\n            }}\n          >\n            Set Purpose!\n          </Button>\n        </div>\n        <Divider />\n        Your Address:\n        <Address address={address} ensProvider={mainnetProvider} fontSize={16} />\n        <Divider />\n        ENS Address Example:\n        <Address\n          address=\"0x34aA3F359A9D614239015126635CE7732c18fDF3\" /* this will show as austingriffith.eth */\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <div>OR</div>\n        <Balance address={address} provider={localProvider} price={price} />\n        <Divider />\n        <div>üê≥ Example Whale Balance:</div>\n        <Balance balance={utils.parseEther(\"1000\")} provider={localProvider} price={price} />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <Divider />\n        Your Contract Address:\n        <Address\n          address={readContracts && readContracts.YourContract ? readContracts.YourContract.address : null}\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how you call setPurpose on your contract: */\n              tx(writeContracts.YourContract.setPurpose(\"üçª Cheers\"));\n            }}\n          >\n            Set Purpose to &quot;üçª Cheers&quot;\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /*\n              you can also just craft a transaction and send it to the tx() transactor\n              here we are sending value straight to the contract's address:\n            */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Send Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how we call setPurpose AND send some value along */\n              tx(\n                writeContracts.YourContract.setPurpose(\"üíµ Paying for this one!\", {\n                  value: utils.parseEther(\"0.001\"),\n                }),\n              );\n              /* this will fail until you make the setPurpose function payable */\n            }}\n          >\n            Set Purpose With Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* you can also just craft a transaction and send it to the tx() transactor */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n                data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\", [\n                  \"ü§ì Whoa so 1337!\",\n                ]),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Another Example\n          </Button>\n        </div>\n      </div>\n\n      {/*\n        üìë Maybe display a list of events?\n          (uncomment the event and emit line in YourContract.sol! )\n      */}\n      <Events\n        contracts={readContracts}\n        contractName=\"YourContract\"\n        eventName=\"SetPurpose\"\n        localProvider={localProvider}\n        mainnetProvider={mainnetProvider}\n        startBlock={1}\n      />\n\n      <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 256 }}>\n        <Card>\n          Check out all the{\" \"}\n          <a\n            href=\"https://github.com/austintgriffith/scaffold-eth/tree/master/packages/react-app/src/components\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            üì¶ components\n          </a>\n        </Card>\n\n        <Card style={{ marginTop: 32 }}>\n          <div>\n            There are tons of generic components included from{\" \"}\n            <a href=\"https://ant.design/components/overview/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              üêú ant.design\n            </a>{\" \"}\n            too!\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <Button type=\"primary\">Buttons</Button>\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <SyncOutlined spin /> Icons\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            Date Pickers?\n            <div style={{ marginTop: 2 }}>\n              <DatePicker onChange={() => {}} />\n            </div>\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Slider range defaultValue={[20, 50]} onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Switch defaultChecked onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Progress percent={50} status=\"active\" />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Spin />\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}