import { useState, useEffect } from 'react';
import { useBlockNumber } from "./";
/**
 * Get the current timestamp from the latest block
 * @param provider (TEthersProvider)
 * @param pollTime (number) :: if >0 use polling, else use instead of onBlock event
 * @returns (number) :: timestamp
 */
export const useTimestamp = (provider, pollTime) => {
    const blockNumber = useBlockNumber(provider, pollTime);
    const [timestamp, setTimestamp] = useState(0);
    useEffect(() => {
        const getTimestamp = async () => {
            const nextBlock = await provider.getBlock(blockNumber);
            if ((nextBlock === null || nextBlock === void 0 ? void 0 : nextBlock.timestamp) != null) {
                const nextTimestamp = nextBlock.timestamp;
                setTimestamp(nextTimestamp);
            }
        };
        void getTimestamp();
    }, [blockNumber, provider]);
    return timestamp;
};
