import { useDebugValue } from 'react';
import { map, distinctUntilChanged } from 'rxjs/operators';
import { useObservableState } from './use-observable-state';
import { useObservable } from './use-observable';
export function useObservablePickState(state$, initialState, ...keys) {
    const value = useObservableState(useObservable(() => state$.pipe(distinctUntilChanged((s1, s2) => keys.every(k => s1[k] === s2[k])), map(state => keys.reduce(
    // eslint-disable-next-line no-sequences
    (o, k) => ((o[k] = state[k]), o), {})))), initialState);
    useDebugValue(value);
    return value;
}
//# sourceMappingURL=use-observable-pick-state.js.map