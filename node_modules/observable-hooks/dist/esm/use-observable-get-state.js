import { useDebugValue } from 'react';
import { map } from 'rxjs/operators';
import { useObservableState } from './use-observable-state';
import { useObservable } from './use-observable';
export function useObservableGetState(state$, initialState) {
    var path = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        path[_i - 2] = arguments[_i];
    }
    var value = useObservableState(useObservable(function () {
        return state$.pipe(map(function (state) { return path.reduce(getValue, state); }));
    }), initialState);
    useDebugValue(value);
    return value;
}
function getValue(obj, key) {
    return obj[key];
}
//# sourceMappingURL=use-observable-get-state.js.map