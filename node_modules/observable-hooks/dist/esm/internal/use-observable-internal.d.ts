import { Observable } from 'rxjs';
import { useEffect } from 'react';
/**
 * @template TOutput Output value within Observable.
 * @template TInputs An readonly tuple of all dependencies.
 *
 * @param useCustomEffect useEffect or useLayoutEffect
 * @param init A pure function that, when applied to an Observable,
 * returns an Observable.
 * @param inputs An dependency array with fixed length. When one of the dependencies
 * changes the Observable in `init` will emit an array of all the dependencies.
 */
export declare function useObservableInternal<TOutput, TInputs extends Readonly<any[]>>(useCustomEffect: typeof useEffect, init: (() => Observable<TOutput>) | ((inputs$: Observable<[...TInputs]>) => Observable<TOutput>), inputs?: [...TInputs]): Observable<TOutput>;
