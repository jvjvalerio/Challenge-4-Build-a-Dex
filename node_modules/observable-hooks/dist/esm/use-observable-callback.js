import { useRef } from 'react';
import { useRefFn, getEmptySubject } from './helpers';
export function useObservableCallback(init, selector) {
    var events$Ref = useRefFn(getEmptySubject);
    var outputs$Ref = useRefFn(function () { return init(events$Ref.current); });
    var callbackRef = useRef(function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        events$Ref.current.next(selector ? selector(args) : args[0]);
    });
    return [callbackRef.current, outputs$Ref.current];
}
//# sourceMappingURL=use-observable-callback.js.map