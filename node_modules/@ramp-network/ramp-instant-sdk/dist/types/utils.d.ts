import { AllWidgetVariants, IHostConfig, TAllEventTypes, TEventListenerDict } from './types';
export declare function getRandomIntString(): string;
export declare const widgetDesktopWidth = 895;
export declare const widgetDesktopHeight = 590;
export declare const minWidgetMobileWidth = 320;
export declare const minWidgetMobileHeight = 667;
export declare function normalizeConfigAndLogErrorsOnInvalidFields(config: Partial<IHostConfig>): IHostConfig;
export declare function initEventListenersDict(): TEventListenerDict;
export declare function countListenersForEvent(listeners: TEventListenerDict, event: TAllEventTypes, internal?: boolean): number;
export declare function determineWidgetVariant(config: IHostConfig): AllWidgetVariants;
export declare function isHtmlElement(element: Element): element is HTMLElement;
/**
 * Concatenates `base` with `path`, always treating `path` as a relative path. Ignores:
 *   - trailing slash in `base`
 *   - leading slash in `path`
 * @param base base URL, e.g.: 'http://example.com/api' or 'http://example.com/service/api/'
 * @param path path to append, e.g.: 'user/getByEmail' or '/swap'
 */
export declare function concatRelativePath(base: string | URL, path: string): URL;
export declare function urlWithoutTrailingSlash(url: string): string;
